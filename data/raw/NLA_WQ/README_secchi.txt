
Open refine: 

[
  {
    "op": "core/column-addition",
    "description": "Changed date format:  Create column date at index 2 based on column DATE_SECCHI using expression grel:value.toDate(\"MM/dd/yy\").toString('yyyy-MM-dd')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "date",
    "columnInsertIndex": 2,
    "baseColumnName": "DATE_SECCHI",
    "expression": "grel:value.toDate(\"MM/dd/yy\").toString('yyyy-MM-dd')",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Secchi setted to 99m when to bottom, concidered to be safe for swimming. Create column SECMEAN_bottom at index 7 based on column SECMEAN using expression grel:if(contains(cells[\"CLEAR_TO_BOTTOM\"].value,\"Y\"),9,value)",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "SECMEAN_bottom",
    "columnInsertIndex": 7,
    "baseColumnName": "SECMEAN",
    "expression": "grel:if(contains(cells[\"CLEAR_TO_BOTTOM\"].value,\"Y\"),9,value)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column SECMEAN_bottom using expression value.toNumber()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SECMEAN_bottom",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
{
    "op": "core/column-move",
    "description": "Move column SECMEAN_bottom to position 10",
    "columnName": "SECMEAN_bottom",
    "index": 10
  },
  {
    "op": "core/transpose-columns-into-rows",
    "description": "Transpose cells in columns starting with SECMEAN_bottom into rows in two new columns named Parameter and Value",
    "startColumnName": "SECMEAN_bottom",
    "columnCount": -1,
    "ignoreBlankCells": true,
    "fillDown": true,
    "keyColumnName": "Parameter",
    "valueColumnName": "Value"
  }
]
